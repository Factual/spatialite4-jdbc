include VERSION

ifndef JAVA_HOME
$(error Set JAVA_HOME environment variable)
endif

libjdbc  := $(wildcard lib/jdbc-*.jar)

JAVA  := "$$JAVA_HOME/bin/java"
JAVAC := "$$JAVA_HOME/bin/javac" 
JAVAH := "$$JAVA_HOME/bin/javah"

TARGET := target
OSINFO_CLASS := org.spatialite.util.OSInfo
OSINFO_PROG := lib/org/spatialite/util/OSInfo.class

## building OSInfo.java 
#$(info compiling OSInfo.java)
#$(shell mkdir -p lib)
#$(shell $(JAVAC) src/main/java/org/spatialite/OSInfo.java -d lib)

OS_NAME := $(shell $(JAVA) -cp lib $(OSINFO_CLASS) --os)
OS_ARCH := $(shell $(JAVA) -cp lib $(OSINFO_CLASS) --arch)
LIB_FOLDER := $(shell $(JAVA) -cp lib $(OSINFO_CLASS))

# Windows uses different path separators, because they hate me
ifeq ($(OS_NAME),Windows)
	sep := ;
else
	sep := :
endif

sqlite := sqlite-$(version)

jni_md := $(shell find -L "$(JAVA_HOME)" -name jni_md.h)
ifneq ($(jni_md),)
jni_include := $(shell dirname "$(jni_md)")
endif


# os=Default is meant to be generic unix/linux

known_targets := Linux-i386 Linux-amd64 Mac-i386 Mac-x86_64 OpenBSD-amd64 Windows-x86 Windows-amd64 SunOS-sparcv9
target := $(OS_NAME)-$(OS_ARCH)

ifeq (,$(findstring $(strip $(target)),$(known_targets)))
  target := Default
endif

Default_CC        := gcc
Default_STRIP     := strip
Default_CFLAGS    := -I$(JAVA_HOME)/include -Ispatialitejdbc/lib/inc_linux -Os -fPIC -fvisibility=hidden
Default_LINKFLAGS := -shared
Default_LIBNAME   := libspatialitejdbc.so
Default_SQLITE_FLAGS  := 

Linux-i386_CC  := gcc
Linux-i386_STRIP  := strip
Linux-i386_CFLAGS    := -I$(JAVA_HOME)/include -Ilib/inc_linux -O2 -fPIC -m32 -fvisibility=hidden
Linux-i386_LINKFLAGS := -shared -static-libgcc
Linux-i386_LIBNAME   := libspatialitejdbc.so
Linux-i386_SQLITE_FLAGS  := 

Linux-amd64_CC  := gcc
Linux-amd64_STRIP  := strip
Linux-amd64_CFLAGS    := -Ilib/inc_linux -I$(JAVA_HOME)/include -O2 -fPIC -m64 -fvisibility=hidden
Linux-amd64_LINKFLAGS := -shared -static-libgcc
Linux-amd64_LIBNAME   := libspatialitejdbc.so
Linux-amd64_SQLITE_FLAGS  := 

OpenBSD-amd64_CC  := gcc
OpenBSD-amd64_STRIP  := strip
OpenBSD-amd64_CFLAGS    := -I$(JAVA_HOME)/include -Ilib/inc_linux -O2 -fPIC -fvisibility=hidden
OpenBSD-amd64_LINKFLAGS := -shared
OpenBSD-amd64_LIBNAME   := libspatialitejdbc.so
OpenBSD-amd64_SQLITE_FLAGS  := 

SunOS-sparcv9_CC  := gcc
SunOS-sparcv9_STRIP  := strip
SunOS-sparcv9_CFLAGS    := -I$(JAVA_HOME)/include -Ilib/inc_linux -O2 -fPIC -m64 -fvisibility=hidden
SunOS-sparcv9_LINKFLAGS := -shared -static-libgcc
SunOS-sparcv9_LIBNAME   := libspatialitejdbc.so
SunOS-sparcv9_SQLITE_FLAGS  := 

# Check for JNI location on OS X. First is old
ifneq ($(wildcard $(JAVA_HOME)/include),)
        MAC_JNI_HOME = $(JAVA_HOME)/include
else
        MAC_JNI_HOME = $(MAC_SDK)/System/Library/Frameworks/JavaVM.framework/Headers
endif

Mac-i386_CC        := gcc -arch $(OS_ARCH) 
Mac-i386_STRIP     := strip -x
Mac-i386_CFLAGS    := -I$(MAC_JNI_HOME) -I$(MAC_LIBXML_INC) -O2 -fPIC -mmacosx-version-min=10.4 -fvisibility=hidden
Mac-i386_LINKFLAGS := -dynamiclib
Mac-i386_LIBNAME   := libspatialitejdbc.jnilib
Mac-i386_SQLITE_FLAGS  := -DSQLITE_ENABLE_LOCKING_STYLE=0

Mac-x86_64_CC        := clang -arch $(OS_ARCH) 
Mac-x86_64_STRIP     := strip -x
MAC_SDK := /Developer/SDKs/MacOSX10.7.sdk
ifeq ($(wildcard MAC_SDK),)
	MAC_SDK := /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk
endif
Mac-x86_64_CFLAGS    := -I$(MAC_JNI_HOME) -I$(MAC_LIBXML_INC) -O2 -fPIC -mmacosx-version-min=10.9 -fvisibility=hidden
Mac-x86_64_LINKFLAGS := -dynamiclib 
Mac-x86_64_LIBNAME   := libspatialitejdbc.jnilib
Mac-x86_64_SQLITE_FLAGS  := 

Windows-x86_CC           := i686-w64-mingw32-gcc
Windows-x86_STRIP        := strip
Windows-x86_CFLAGS       := -D_JNI_IMPLEMENTATION_ -Ilib/inc_win -O2
Windows-x86_LINKFLAGS    := -Wl,--kill-at -shared
Windows-x86_LIBNAME      := spatialitejdbc.dll
Windows-x86_SQLITE_FLAGS := 

Windows-amd64_CC           := x86_64-w64-mingw32-gcc 
Windows-amd64_STRIP        := x86_64-w64-mingw32-strip
Windows-amd64_CFLAGS       := -D_JNI_IMPLEMENTATION_ -Ilib/inc_win -O2
Windows-amd64_LINKFLAGS    := -Wl,--kill-at -shared
Windows-amd64_LIBNAME      := spatialitejdbc.dll
Windows-amd64_SQLITE_FLAGS := 


CC        := $($(target)_CC)
STRIP     := $($(target)_STRIP)
CFLAGS    := $($(target)_CFLAGS) 
LINKFLAGS := $($(target)_LINKFLAGS) 
LIBNAME   := $($(target)_LIBNAME)
SQLITE_FLAGS := $($(target)_SQLITE_FLAGS)
SQLITE_AMAL_PREFIX = sqlite-amalgamation-$(shell ./amalgamation_version.sh $(version))
CFLAGS := $(CFLAGS) 
ifneq ($(jni_include),)
CFLAGS := $(CFLAGS) -I"$(jni_include)"
endif


# todo: set correct configure and linker flags for i386 arch below 

ifeq ($(OS_NAME),Windows)
    SPATIALITE_CONFIG_FLAGS = --enable-freexl=no --enable-proj=yes --enable-geos=yes --enable-lwgeom=no
    SPATIALITE_FLAGS = 
    NATIVE_DLL = win32
else ifeq ($(OS_NAME),Linux)
    ifeq ($(target),Linux-amd64)
        NATIVE_DLL = linux64
		SPATIALITE_CONFIG_FLAGS = --enable-freexl=no --enable-proj=yes --enable-geos=yes --enable-lwgeom=no
    	SPATIALITE_FLAGS = $(SPATIALITE_DIR)/src/.libs/libspatialite.a /usr/local/lib/libgeos.a /usr/lib/libproj.a /usr/local/lib/libgeos_c.a /usr/lib/x86_64-linux-gnu/libxml2.a /usr/lib/x86_64-linux-gnu/libz.a /usr/lib/x86_64-linux-gnu/liblzma.a $(SPATIALITE_DIR)/src/virtualtext/.libs/libvirtualtext.a -lstdc++
    else
    	NATIVE_DLL = linux32
		SPATIALITE_CONFIG_FLAGS = --enable-freexl=no --enable-proj=yes --enable-geos=yes --enable-lwgeom=no
    	SPATIALITE_FLAGS = $(SPATIALITE_DIR)/src/.libs/libspatialite.a /usr/local/lib/libgeos.a /usr/lib/libproj.a /usr/local/lib/libgeos_c.a /usr/local/lib/libxml2.a /usr/local/lib/libz.a /usr/local/lib/liblzma.a /usr/local/lib/libiconv.a $(SPATIALITE_DIR)/src/virtualtext/.libs/libvirtualtext.a -lstdc++
    endif
else ifeq ($(OS_NAME),Mac)
    ifeq ($(target),Mac-x86_64)
        NATIVE_DLL = mac64
    	SPATIALITE_CONFIG_FLAGS = --enable-freexl=no --enable-proj=yes --enable-geos=yes --enable-lwgeom=no
		SPATIALITE_FLAGS = $(SPATIALITE_DIR)/src/.libs/libspatialite.a /opt/local/lib/libgeos.a /opt/local/lib/libproj.a /opt/local/lib/libgeos_c.a /opt/local/lib/libxml2.a /opt/local/lib/libz.a /opt/local/lib/liblzma.a /opt/local/lib/libiconv.a $(SPATIALITE_DIR)/src/virtualtext/.libs/libvirtualtext.a -lstdc++
    else
    	NATIVE_DLL = mac32
		SPATIALITE_CONFIG_FLAGS = --enable-freexl=no --enable-proj=yes --enable-geos=yes --enable-lwgeom=no CC=clang CXX="clang++ -std=c++11 -stdlib=libc++"
		SPATIALITE_FLAGS = $(SPATIALITE_DIR)/src/.libs/libspatialite.a /opt/local/lib/libgeos.a /opt/local/lib/libproj.a /opt/local/lib/libgeos_c.a /opt/local/lib/libxml2.a /opt/local/lib/libz.a /opt/local/lib/liblzma.a  /opt/local/lib/libiconv.a $(SPATIALITE_DIR)/src/virtualtext/.libs/libvirtualtext.a 
    endif
endif